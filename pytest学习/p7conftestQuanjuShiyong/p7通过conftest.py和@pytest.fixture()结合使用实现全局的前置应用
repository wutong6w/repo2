三、通过conftest.py和@pytest.fixture()结合使用实现全局的前置应用（比如：项目的全局登录，模块的全局处理）
1、conftest.py文件是单独存放的一个夹具配置文件，名称是不能更改
2、可以在不同的py文件中使用同一个fixture函数
3、原则上conftest.py需要和运行的用例放到同一层，并且不需要做任何的import导入的操作（如果里面有包也就是文件，文件里面的用例也会被执行前置后置）

总结：
setup teardown，setup_classteardown 它是作用于所有的用例所有的类
@pytest.fixture()它的作用于既可以部分用例也可以全部用例前后置
conftest.py它是和@pytest.fixture()结合使用的，作用于全局的前后置

四、断言
assert 1==2

五、pytest结合allure-pytest插件生成allure测试报告
昨天讲的是：pytest-html
今天讲：allure-pytest（需要安装allure-pytest插件）

allure报告生成步骤
1、下载、解压、配置path路径
下面就是allure报告的官网，注意下面的官网会下载2.13.10的allure，这个版本的有问题，生成allure后会出现在浏览器打开空白现象。要下载别的版本allure来避免打开allure空白现象
https://github.com/allure-framework/allure2/releases/tag/2.13.10
下面是下载其他allure报告的版本
https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/
下面是安装allure图文教程
http://t.zoukankan.com/hellogmy-p-14569099.html
配置path路径
验证是否装好黑窗口输入：allure --version
pycharm窗口验证输入allure --version。如果出现黑窗口可以验证，而pycharm不能验证那么就重启pycharm
2、加入代码生成json格式的临时报告
如果是单存写在main方法参数里面就加个等号 --alluredir=./temp
如果是写在全局配置文件pytest.ini中的就是--alluredir./temp     如果在全局配置文件中--alluredir./temp 不写等号报错，那么就加上等号--alluredir=./temp


3、生成allure报告    在if __name__ == '__main__':下面写os.system('allure generate ./temp -o ./report --clear')
if __name__ == '__main__':
    pytest.main(['-vs','--alluredir=./temp'])#生成allure报告
    os.system('allure generate ./temp -o ./report --clean')
os调用system   allure generate是固定语法   ./temp表示找到你的临时报告，如果临时报告是当前文件下的其他名字如aaa，那么就是./aaa
-o表示输出的意思   ./report表示输出到当前的report目录下   --clean表示清空./report原来有的报告，注意是clean，不是clear






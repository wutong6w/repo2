五、pytest测试用例的运行方式
1、主函数模式
(1)运行所有：pytest.main()
（2）运行指定模块：pytest.main(['-vs','模块名.py'])
    参数详解
    -s：表示输入调试信息，包括print打印的信息   既pytest.main(['-s'])   main函数里面的参数是个列表
    -v:显示更详细信息，-s和-v可以一起使用
（3）运行指定文件夹 pytest.main(['-vs', './pytest学习'])     其中pytest学习是文件名，使用此方法要注意将该模块放在与要执行文件的同级别目录
（4）通过nodeid指定用例运行：node由模块名，分隔符，类名，方法名，函数名组成
         pytest.main(['-vs', './文件名/模块名.py::函数名'])
         如果要执行类里面的单个方法那么还要加类名  pytest.main(['-vs', './文件名/模块名.py::类名::函数名'])
   -n:支持多线程或者分布式运行： pytest.main(['-vs','./文件名','-n=2'])  其中-n=2表示分布2个线程同时运行
   --reruns=number失败用例重跑：    pytest.main(['-vs','./文件名','--reruns=2'])#--reruns=2表示失败用例重跑2次，那么失败的用例就会跑3次，--reruns是固定写法，等于几就是失败后再跑几次
    -x:表示只要有一个用例报错，那么测试停止

2、命令行模式
（1）运行所有：pytest
（2）运行指定模块pytest -vs 模块名.py
（3）pytest -vs ./文件名
(4)pytest -vs ./文件名/模块名.py::类名::函数名
    参数详解
    -s：表示输入调试信息，包括print打印的信息   pytest -s
    -v:显示更详细信息，-s和-v可以一起使用
    -n:支持多线程或者分布式运行： pytest -vs ./文件名 -n 线程数
    --reruns number失败用例重跑：         pytest -vs ./web --reruns 2
    -x:表示只要有一个用例报错，那么测试停止    pytest -vs ./web -x
    以上参数都是最常用的
    --maxfail=2：出现两个用例失败就停止    pytest -vs ./web --maxfail
    -k:根据测试用例的部分字符串指定测试用例   pytest -vs ./文件名 -k 'ao'  表示只执行测试用例当中方法名包含ao的
3、通过读取pytest ini配置文件运行









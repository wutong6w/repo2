五、pytest测试用例的运行方式
1、主函数模式
(1)运行所有：pytest.main()
（2）运行指定模块：pytest.main(['-vs','模块名.py'])
    参数详解
    -s：表示输入调试信息，包括print打印的信息   既pytest.main(['-s'])   main函数里面的参数是个列表
    -v:显示更详细信息，-s和-v可以一起使用
（3）运行指定文件夹 pytest.main(['-vs', './pytest学习'])     其中pytest学习是文件名，使用此方法要注意将该模块放在与要执行文件的同级别目录
（4）通过nodeid指定用例运行：node由模块名，分隔符，类名，方法名，函数名组成
         pytest.main(['-vs', './文件名/模块名.py::函数名'])
         如果要执行类里面的单个方法那么还要加类名  pytest.main(['-vs', './文件名/模块名.py::类名::函数名'])
   -n:支持多线程或者分布式运行： pytest.main(['-vs','./文件名','-n=2'])  其中-n=2表示分布2个线程同时运行
   --reruns=number失败用例重跑：    pytest.main(['-vs','./文件名','--reruns=2'])#--reruns=2表示失败用例重跑2次，那么失败的用例就会跑3次，--reruns是固定写法，等于几就是失败后再跑几次
    -x:表示只要有一个用例报错，那么测试停止
生成html报告参数 --html ./report/report.html 表示在当前目录report生成一个名字为report.html报告

2、命令行模式
（1）运行所有：pytest
（2）运行指定模块pytest -vs 模块名.py
（3）pytest -vs ./文件名
(4)pytest -vs ./文件名/模块名.py::类名::函数名
    参数详解
    -s：表示输入调试信息，包括print打印的信息   pytest -s
    -v:显示更详细信息，-s和-v可以一起使用
    -n:支持多线程或者分布式运行： pytest -vs ./文件名 -n 线程数
    --reruns number失败用例重跑：         pytest -vs ./web --reruns 2
    -x:表示只要有一个用例报错，那么测试停止    pytest -vs ./web -x
    以上参数都是最常用的
    --maxfail=2：出现两个用例失败就停止    pytest -vs ./web --maxfail
    -k:根据测试用例的部分字符串指定测试用例   pytest -vs ./文件名 -k 'ao'  表示只执行测试用例当中方法名包含ao的

3、通过读取pytest.ini配置文件运行(pytest.ini中不能有中文注释一定要删除）
pytest ini这个文件它是pytest单元测试框架的最核心配置文件(创建的是普通file文件，而不是python file文件）
1位置：一般放在项目的根目录，比如此项目文件pytest学习，那么它就这pytest学习这个文件下面，它的名字是不能够改的,必须的写成pytest.ini
2编码：必须是ANSI，可以使用notepad++修改编码格式（如果不用这个工具修改会报错）
3作用：改变pytest默认的行为
4运行的规则：不管是主函数的模式运行，命令行模式运行，都回去读取这个配置文件

pytest默认行为是一下3种。也可以用pytest.ini配置文件去更改
1模块名必须以test_开头或_test结尾
2测试类必须以Test开头，并且不能有init方法（也就python中的魔术初始化方法__init__)
3测试方法（也就是测试用例）必须以test_开头

pytest.ini配置文件    全局文件配置好了再命令行输入pytest就能运行所有的用例并且按照全局配置文件进行执行的
[pytest]#固定的写法，注意pytest ini配置文件中不能有注释的中文，所以我在这里写明，为了自己以后能看清楚能记住
#命令行参数，用空格分隔,我们学到的命令行参数都可以在addopts中加，多个参数用空格隔开
#--html ./report/report.html解释：在addopts加上--html生成html报告，./report表示当前目录report文件生成一个名字为report.html报告
addopts =-vs --html ./report/report.html
#表示用例的执行位置，可自己配置，../代表是上一层目录，./代表的是当前目录
testpaths=./p3pytest用例执行顺序
#表示模块名是已什么样的格式开头。我们现在是已test_开头，所以就算test_*.py，当然如果我们的模块名是aaa开头也可以，那么此处就是aaa*.py   表示执行哪些测试用例文件的匹配规则
python_files = test_*.py
#测试用例类的匹配规则，也就是执行哪些测试类。包括我们的类名也是可以改成AAA开头的 这就是改变pytest默认行为
python_classes = Test*
#测试用例方法的匹配规则，也就是执行哪些方法
python_functions =test*
#markers参数用于标记，便于执行部分测试用例，比如执行冒烟测试用例  然后去命令行输入命令pytest -vs ./文件名 -m 'smoke'  #其中-m是参数，要执行冒烟测试用例就写上全局配置文件中smoke，如果要执行用户管理模块那么就写'username'，mark标记的smoke是自己起的名字
#smoke冒号后面是自己写的备注
markers=
    smoke:冒烟测试用例
    username:用户管理模块
    proeuctmanage:接口用例

全局配置文件配置好后去命令行输入下面命令就会运行p3pytestyonglizhixingshunxu这个文件的相关符合条件的用例
pytest -vs ./p3pytestyonglizhixingshunxu



